import numpy as np
import matplotlib.pyplot as plt

"""
This script will calculate the rear tyre slip due to the swingarm rotation.
Assumption:
    - const. Thrust, thus const. slip
    - front sprocket is at the Swingarm Pivot
    
Description:
    - a counterclockwise rotation delta theta, due to rotation of the swinging arm
    - a clockwise rotation delta beta, caused by the extension portion of the chain from the larger wheel
"""

r_p = 0.04 # (m) radius of the pinion (small) 
r_c = 0.02 # (m) radius of the sprocket (large)

tau_cp = r_p / r_c # transmission ratio

delta_theta = 0.1 # (rad) rotation of the swingarm


delta_beta = delta_theta * r_p / r_c

print("Delta Beta (rad) is: ", delta_beta)

"""
Let P be the point belonging to the tire which at the initial instant represents the contact point between the tire and ground.
Following the oscillation of the fork, it is rotated through the angle delta_alpha.

Representing the slide angle due to the rotation of the swinging arm. A slide length of alpha * R_r corresponds to the slippage
angle (R_r indicates the radius of the wheel).

"""

delta_alpha = (1 - tau_cp) * delta_theta

print("The RW CP is rotated by (rad): ", delta_alpha)

"""
In conclusion, giving a counterclockwise rotation on the swinging arm, i.e., compressing the rear suspension, causes a slip that is added
to that needed to transmit the thrust. 
Therefore, it is correct to state that the slip between the wheel and the ground increases during the compression of the suspension
and diminishes during extension.
"""

"""
If we suppose that the swinging arm is subject to an oscillatory motion:
"""

theta_0 = 0.1 # (rad) initial mean swingarm rotation angle
omega = 0.05 # (rad/s) angular velocity
t_list =  np.arange(0, 1, 0.1)

delta_theta_t_list = []
delta_alpha_d_list = []

for t in t_list:

    delta_theta_t = theta_0 + delta_theta * np.sin(omega * t)
    delta_alpha_d = (1 - tau_cp) * delta_theta * omega * np.cos(omega * t)

    delta_theta_t_list.append(delta_theta_t)
    delta_alpha_d_list.append(delta_alpha_d)

print(delta_theta_t_list)
print(delta_alpha_d_list)

plt.plot(t_list ,delta_theta_t_list)
plt.show()

plt.plot(t_list, delta_alpha_d_list)
plt.show()
"""
the angular velocity of slippage of the contact point is: delta_alpha_d

This means, that during forward motion at const. Velocity V, a fluctuating component is superimposed on the constant angular velocity of
rotation of the wheel Omega = V / R_r.
(Actually, the slippage due to the swinging arm oscillations transmits fluctuations to the sprocket motion as well, so that
the irregularity of the motor's rotation is increased. In the same way, the pull on the chain is composed of a constant tension, to which a
fluctuating tension is generated by swinging arm oscillation is added.)
"""

"""
In the more general case, where pinion and Pivot are not concentric:

"""

delta_eta =  # (unit) what is it?
delta_L_c = # (unit) what is it?

delta_beta_general = tau_cp * delta_eta + delta_L_c / r_c
delta_alpha_general = delta_theta - delta_beta_general